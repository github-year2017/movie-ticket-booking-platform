/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.movieticketbooking.api;

import org.springframework.format.annotation.DateTimeFormat;
import java.time.LocalDate;
import com.example.movieticketbooking.model.TheatresGet200ResponseInner;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-07-01T12:51:04.268344+05:30[Asia/Kolkata]")
@Validated
@Tag(name = "theatres", description = "the theatres API")
public interface TheatresApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /theatres : Browse theatres running the selected movie in the specified town, including show timings by a chosen date.
     *
     * @param movieId The ID of the movie. (required)
     * @param town The name of the town. (required)
     * @param date The chosen date (YYYY-MM-DD). Defaults to the current date if not provided. (optional)
     * @return A list of theatres and show timings. (status code 200)
     *         or Bad request, invalid parameters. (status code 400)
     *         or No theatres found for the selected movie in the specified town and date. (status code 404)
     *         or Internal server error. (status code 500)
     */
    @Operation(
        operationId = "theatresGet",
        summary = "Browse theatres running the selected movie in the specified town, including show timings by a chosen date.",
        responses = {
            @ApiResponse(responseCode = "200", description = "A list of theatres and show timings.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = TheatresGet200ResponseInner.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad request, invalid parameters."),
            @ApiResponse(responseCode = "404", description = "No theatres found for the selected movie in the specified town and date."),
            @ApiResponse(responseCode = "500", description = "Internal server error.")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/theatres",
        produces = { "application/json" }
    )
    default ResponseEntity<List<TheatresGet200ResponseInner>> theatresGet(
        @NotNull @Parameter(name = "movie_id", description = "The ID of the movie.", required = true) @Valid @RequestParam(value = "movie_id", required = true) String movieId,
        @NotNull @Parameter(name = "town", description = "The name of the town.", required = true) @Valid @RequestParam(value = "town", required = true) String town,
        @Parameter(name = "date", description = "The chosen date (YYYY-MM-DD). Defaults to the current date if not provided.") @Valid @RequestParam(value = "date", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate date
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"theatre_name\" : \"theatre_name\", \"show_times\" : [ \"show_times\", \"show_times\" ], \"theatre_id\" : \"theatre_id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
