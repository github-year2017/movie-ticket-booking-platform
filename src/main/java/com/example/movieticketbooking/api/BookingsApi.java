/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.movieticketbooking.api;

import com.example.movieticketbooking.model.BookingsPost201Response;
import com.example.movieticketbooking.model.BookingsPostRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-07-01T12:51:04.268344+05:30[Asia/Kolkata]")
@Validated
@Tag(name = "bookings", description = "the bookings API")
public interface BookingsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /bookings : Book movie tickets by selecting a theatre, timing, and preferred seats for the day.
     *
     * @param bookingsPostRequest  (required)
     * @return Booking created successfully. (status code 201)
     *         or Bad request, invalid input parameters. (status code 400)
     *         or Theatre, movie, or seats not found. (status code 404)
     *         or Internal server error. (status code 500)
     */
    @Operation(
        operationId = "bookingsPost",
        summary = "Book movie tickets by selecting a theatre, timing, and preferred seats for the day.",
        responses = {
            @ApiResponse(responseCode = "201", description = "Booking created successfully.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BookingsPost201Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad request, invalid input parameters."),
            @ApiResponse(responseCode = "404", description = "Theatre, movie, or seats not found."),
            @ApiResponse(responseCode = "500", description = "Internal server error.")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/bookings",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<BookingsPost201Response> bookingsPost(
        @Parameter(name = "BookingsPostRequest", description = "", required = true) @Valid @RequestBody BookingsPostRequest bookingsPostRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"booking_id\" : \"booking_id\", \"date\" : \"2000-01-23\", \"show_time\" : \"show_time\", \"movie_id\" : \"movie_id\", \"theatre_id\" : \"theatre_id\", \"seats\" : [ \"seats\", \"seats\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
